
#------------------------------------------------------------------------------
# Determine the target platform.

ifeq      ($(shell uname), Darwin)
	ISMACOS = true
else ifeq ($(shell uname), Linux)
	ISLINUX = true
else ifeq ($(shell uname), MINGW32_NT-6.1)
	ISMINGW = true
endif

#------------------------------------------------------------------------------
# Configure the compiler

ifdef ISMINGW
	CC      = "/c/Program Files (x86)/CodeBlocks/MinGW/bin/mingw32-gcc.exe"
	CXX     = "/c/Program Files (x86)/CodeBlocks/MinGW/bin/mingw32-g++.exe" -fno-rtti
else
	CC      = cc
	CXX     = c++ -fno-rtti
#	DYNAMIC = true
endif

CFLAGS += -Wall -O2

#------------------------------------------------------------------------------
# Configure the system libraries.

ifdef ISMACOS
	SYSLIBS = -framework OpenGL \
 		  -framework IOKit \
		  -framework Cocoa \
 		  -framework Carbon \
 		  -framework CoreAudio \
 		  -framework AudioUnit \
 		  -framework AudioToolbox \
 		  -framework ForceFeedback \
 		  -framework ApplicationServices
	LIBPATH = /usr/local/lib/ /opt/local/lib/ /usr/lib/
endif

ifdef ISLINUX
	ifdef DYNAMIC
		CFLAGS += -fPIC
	else
		CFLAGS += -static-libgcc -static-libstdc++
	endif
	SYSLIBS = -lGL
	LIBPATH = /usr/local/lib/ /usr/lib/ /usr/lib/x86_64-linux-gnu/
endif

ifdef ISMINGW
	CFLAGS  += -static -DGLEW_STATIC
	#SYSLIBS += -mwindows
	SYSLIBS += -lopengl32 -lole32 -loleaut32 -lws2_32 -lversion -luuid -lwinmm -limm32 -lgdi32 -luser32 -lkernel32 -lcomctl32
	LIBS    += -lmingw32
	LIBPATH  = C:/MinGW/lib/
endif

#------------------------------------------------------------------------------
# Configure the dependencies either statically or dynamically.

PKG_CONFIG = $(firstword $(wildcard /usr/local/bin/pkg-config \
			                  /usr/bin/pkg-config) \
			                           pkg-config)

PKGS = libpng libtiff-4 mxml ode freetype2 sdl2 zlib glew

ifdef DYNAMIC
	LIBS += $(shell $(PKG_CONFIG) --libs $(PKGS))
else
	LIBS += $(firstword $(wildcard $(addsuffix libfreetype.a, $(LIBPATH))) -lfreetype)
	LIBS += $(firstword $(wildcard $(addsuffix libtiff.a,     $(LIBPATH))) -ltiff)
	LIBS += $(firstword $(wildcard $(addsuffix libjpeg.a,     $(LIBPATH))) -ljpeg)
	LIBS += $(firstword $(wildcard $(addsuffix libmxml.a,     $(LIBPATH))) -lmxml)
	LIBS += $(firstword $(wildcard $(addsuffix libode.a,      $(LIBPATH))) -lode)
	LIBS += $(firstword $(wildcard $(addsuffix libpng.a,      $(LIBPATH))) -lpng)
	LIBS += $(firstword $(wildcard $(addsuffix libz.a,        $(LIBPATH))) -lz)
	LIBS += $(firstword $(wildcard $(addsuffix libSDL2main.a, $(LIBPATH))))
	LIBS += $(firstword $(wildcard $(addsuffix libSDL2.a,     $(LIBPATH))) -lSDL2)
	LIBS += $(firstword $(wildcard $(addsuffix libGLEW.a,     $(LIBPATH)) \
	                               $(addsuffix libglew32.a,   $(LIBPATH))) -lglew)
	LIBS += $(firstword $(wildcard $(addsuffix libiconv.a,    $(LIBPATH))) -liconv)
endif

CFLAGS += $(sort $(shell $(PKG_CONFIG) --cflags $(PKGS)))

#------------------------------------------------------------------------------
# Optional Oculus SDK

ifdef ISMACOS
	OVRPATH = /usr/local/OculusSDK/LibOVR
	ifneq (, $(wildcard $(OVRPATH)))
		LIBS    += -L$(OVRPATH)/Lib/MacOS/Release -lovr
		CFLAGS  += -I$(OVRPATH)/Include
		CFLAGS  += -DWITH_OCULUS
	endif
endif

ifdef ISLINUX
	OVRPATH = /usr/local/OculusSDK/LibOVR
	ifneq (, $(wildcard $(OVRPATH)))
		LIBS    += -L$(OVRPATH)/Lib/Linux/Release/x86_64 -lovr
		SYSLIBS += -ludev -lX11 -lXinerama
		CFLAGS  += -I$(OVRPATH)/Include
		CFLAGS  += -DWITH_OCULUS
	endif
endif

# https://github.com/larspensjo/OculusSDK-MinGW/

ifdef ISMINGW
	OVRPATH = C:/Users/rlk/Documents/GitHub/ovr_sdk_mingw_0.2.5c
	ifneq (, $(wildcard $(OVRPATH)))
		LIBS    += $(OVRPATH)/LibOVR/Lib/libOVR_MinGW_Win32_d.a
		SYSLIBS += -lsetupapi
		CFLAGS  += -I$(OVRPATH)/LibOVR/Include
		CFLAGS  += -DWITH_OCULUS
	endif
endif

#------------------------------------------------------------------------------
# Optional Sixense SDK

SIXPATH = /usr/local

ifneq (, $(wildcard $(SIXPATH)/lib/libsixense*))
	LIBS   += -L$(SIXPATH)/lib -lsixense_x64
	CFLAGS += -I$(SIXPATH)/include
	CFLAGS += -DWITH_SIXENSE
endif

#------------------------------------------------------------------------------

LIBS += $(SYSLIBS)

#------------------------------------------------------------------------------

%.d : %.cpp
	$(CXX) $(CFLAGS) -MM -MG -MF $@ -MT $*.o $<

%.o : %.cpp
	$(CXX) $(CFLAGS) -c $< -o $@

#------------------------------------------------------------------------------
