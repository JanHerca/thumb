
data layout

        ttf

        scene

                funland.xml
                1upia.xml        

        audio
                music
                sound
                        baz
                                jump1.ogg
                                jump2.ogg

        solid
                plant
                platform
                button
                vehicle
                        jeep_body.obj
                        jeep_tire.obj
                misc
                        box.obj
                        box.mtl
        joint
                joint_ball.obj
                joint_ball.mtl

Physical properties

        global
                ERP
                CFM
                gravity

        entity
                category
                collide
                mass
                bounce
                friction
                conveyer x
                conveyer y
                soft ERP
                soft CFM

        joint
                velocity 1 2 3
                force    1 2 3
                CFM      1 2 3
                lo stop  1 2 3
                hi stop  1 2 3
                bounce   1 2 3
                stop ERP 1 2 3
                stop CFM 1 2 3
                suspension ERP
                suspension CFM


Expression Grammar

        P -> "sin"
        P -> "cos"
        P -> "sqr"
        P -> "tri"
        P -> "saw"

        P -> "key"
        P -> "btn"
        P -> "trg"
        P -> "joy"

        F -> "t"
        F -> "pi"
        F -> "inf"
        F -> [0..9]*
        F -> [0..9]*.[0..9]*

        F -> P ( E )
        F ->   ( E )
        F ->   - E
        T ->   F
        T ->   F * T
        T ->   F / T
        E ->   T
        E ->   T + E
        E ->   T - E

Octree notes

        Needs
                Frustum culling for rendering to camera and lightsource views
                Rubber band selection
                Picking (optionally)
                Front-back sorting
                Invariant preservation is the tough issue
                "All" arbitrary iteration

        ODE planes could do rubber band selection, but probably are not
        appropriate for render culling.

        A log(n) implementation MAY not be a performance improvement
                The tipping point is probably around 1000 objects


        Implementation
                Explicit point representation (PR)
                Recursive AABB subdivision (MX)
                        Doesn't grow as nicely as PR
                Plane straddling could be tough


        Static grid octree

                Invariants
                        Each entity is in exactly ONE cell
                        This cell is the smallest that contains the entity

                For each moving entity
                        While the entity is NOT within its current cell
                                Move it up (necessary)

                        If the entity fits within a subcess of the current cell
                                Move it down (optimization)

                Entities outside the static index
                        Sit at the root
                                Root is infinitely large
                or
                        Can't happen
                                ODE planes bound the space
                                This would also allow quadtree space to work


use step_prio entity attribute to optimize post-step update
use view_prio attribute to trigger draw pass

getting rid of get_joint/get_solid

        geom set parameter before stop (after dSurfaceParam restructure)
        joint set parameter before step
        solid geom to entity/spacial index resort after step

        edit
        play
        view
        draw?
        step

step (move phys_step to mode)
        for each entity
                if active
                        pre step
        step all
        for each entity
                if active
                        post step

draw
        for each entity
                if viewer
                        view_pre
                        draw all
                        view_post

How to ensure lights before mirror before camera?

Setting line parameters per draw_line is stupid.
