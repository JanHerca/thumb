The user event should not reinit everything

    glob
    demo
        info
            gui
                text
    yes
        conf
        glob
    no
        data
        lang (unless conf lang changes)
        view (frustum parameters need update)
        mono (unless conf font changes)
        sans (unless conf font changes)
        joy  (unless conf joystick changes)
        prog/demo?

Reduce the number of string passes by value in the gui module.

add to glob
    load tex
    load obj

Control panes on function keys?
    F5 info about
    F6 info world
    F7 info solid
    F8 info joint

Add entity scaling.
    Uniform only?
        + would preserve sphereness of spheres
        + would ensure texture uniformity
        - would force a variety of sized OBJs
Add new ODE geoms.
    Cylinder
    Heightfield
    Plane
    Convex?
    Ray?
Incorporate some of the shading/buffer/image/state lessons learned from atmo.
Incorporate perf module from atmo.  Stats in GUI?
Generalize the "follow" mechanism to "enable".
Move sky/earth/sun ownership to scene.
Use spatial index to eliminate unnecessary shadow map redraw.
    Lights should know if they see a static scene.

Frustum culling for cameras and lights.
Cascaded shadow.
Documentation.
Add capsule.
Rubber-band select.
Object-inside-object select?
Intro text / flowing widget.
World parameters
Selection registers.
Center contraint on a group.
Partial run.
Remove per-frame conf references.
Refresh button on solid loader.
Optimize constraint drawing -- integrate display lists with glob.
Optimize wire drawing.
Conveyer solid property.
Z compression of scene XML.
Figure out why repeated runs differ.

Optional soft cursor.
"scene" -> "world"?
"demo"  -> ?

Stop the freerun during editing.
        Snapshot beneath info.
Add shader references to MTL.
Add material enable bits to OBJ.
Move wrap parameter out of material application.


OBJ/general loading
    const void *load_dat(const char *name, size_t *);
    const void *load_img(const char *name, size_t *);
    GLenum      load_tex(const char *name);
    void        free_dat(const char *name);

        Texture object and parameters may be determined from current binding

string
memory
texture
buffer
binary
image

Data archives

    a common path naming scheme that transparently accesses all archives
    in prioritized order

    priority
        cwd    rw
        home   rw
        pak2   r
        pak1   r
        pak0   r
        static r

    load searches r archives in order
    save searches w archives in order

file
pack
link

